/mnt/lustre/indy2lfs/work/m22oc/m22oc/s2311726/uoeRL/lib/python3.9/site-packages/gym/core.py:317: DeprecationWarning: [33mWARN: Initializing wrapper in old step API which returns one bool instead of two. It is recommended to set `new_step_api=True` to use new step API. This will be the default behaviour in future.[0m
  deprecation(
/mnt/lustre/indy2lfs/work/m22oc/m22oc/s2311726/uoeRL/lib/python3.9/site-packages/gym/wrappers/step_api_compatibility.py:39: DeprecationWarning: [33mWARN: Initializing environment in old step API which returns one bool instead of two. It is recommended to set `new_step_api=True` to use new step API. This will be the default behaviour in future.[0m
  deprecation(
  0%|          | 0/400000 [00:00<?, ?it/s]/mnt/lustre/indy2lfs/work/m22oc/m22oc/s2311726/uoeRL/lib/python3.9/site-packages/gym/utils/passive_env_checker.py:241: DeprecationWarning: `np.bool8` is a deprecated alias for `np.bool_`.  (Deprecated NumPy 1.24)
  if not isinstance(terminated, (bool, np.bool8)):
/mnt/lustre/indy2lfs/work/m22oc/m22oc/s2311726/uoeRL/lib/python3.9/site-packages/gym/utils/passive_env_checker.py:260: UserWarning: [33mWARN: The reward returned by `step()` must be a float, int, np.integer or np.floating, actual type: <class 'torch.Tensor'>[0m
  logger.warn(
/mnt/lustre/indy2lfs/work/m22oc/m22oc/s2311726/rl_test/agents.py:323: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  states = torch.tensor(states, device=device)
/mnt/lustre/indy2lfs/work/m22oc/m22oc/s2311726/rl_test/agents.py:324: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  actions = torch.tensor(actions, device=device)
/mnt/lustre/indy2lfs/work/m22oc/m22oc/s2311726/rl_test/agents.py:325: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  next_states = torch.tensor(next_states, device=device)
/mnt/lustre/indy2lfs/work/m22oc/m22oc/s2311726/rl_test/agents.py:326: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  rewards = torch.tensor(rewards, device=device)
/mnt/lustre/indy2lfs/work/m22oc/m22oc/s2311726/rl_test/agents.py:327: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  dones = torch.tensor(dones, device=device)
  0%|          | 200/400000 [00:11<6:10:38, 17.98it/s]  0%|          | 400/400000 [00:16<4:22:17, 25.39it/s]  0%|          | 600/400000 [00:22<3:47:56, 29.20it/s]  0%|          | 800/400000 [00:28<3:32:48, 31.27it/s]  0%|          | 1000/400000 [00:33<3:24:12, 32.56it/s]  0%|          | 1200/400000 [00:39<3:19:28, 33.32it/s]  0%|          | 1400/400000 [00:45<3:15:56, 33.90it/s]  0%|          | 1600/400000 [00:50<3:13:32, 34.31it/s]  0%|          | 1800/400000 [00:56<3:11:54, 34.58it/s]  0%|          | 2000/400000 [01:02<3:11:22, 34.66it/s]                                                         0%|          | 2000/400000 [01:02<3:11:22, 34.66it/s]  1%|          | 2200/400000 [01:08<3:19:15, 33.27it/s]  1%|          | 2400/400000 [01:14<3:16:39, 33.70it/s]  1%|          | 2600/400000 [01:20<3:14:27, 34.06it/s]  1%|          | 2800/400000 [01:26<3:13:00, 34.30it/s]  1%|          | 3000/400000 [01:31<3:12:57, 34.29it/s]  1%|          | 3200/400000 [01:37<3:13:18, 34.21it/s]  1%|          | 3400/400000 [01:43<3:13:10, 34.22it/s]  1%|          | 3600/400000 [01:49<3:11:44, 34.46it/s]  1%|          | 3800/400000 [01:55<3:11:26, 34.49it/s]  1%|          | 4000/400000 [02:00<3:11:32, 34.46it/s]                                                         1%|          | 4000/400000 [02:01<3:11:32, 34.46it/s]  1%|          | 4200/400000 [02:07<3:16:15, 33.61it/s]  1%|          | 4400/400000 [02:12<3:14:32, 33.89it/s]  1%|          | 4600/400000 [02:18<3:13:42, 34.02it/s]  1%|          | 4800/400000 [02:24<3:12:50, 34.16it/s]  1%|▏         | 5000/400000 [02:30<3:12:39, 34.17it/s]  1%|▏         | 5200/400000 [02:36<3:13:24, 34.02it/s]  1%|▏         | 5400/400000 [02:42<3:14:10, 33.87it/s]  1%|▏         | 5600/400000 [02:48<3:13:52, 33.91it/s]  1%|▏         | 5800/400000 [02:54<3:14:31, 33.77it/s]  2%|▏         | 6000/400000 [03:00<3:15:24, 33.61it/s]                                                         2%|▏         | 6000/400000 [03:00<3:15:24, 33.61it/s]                                                         2%|▏         | 6000/400000 [03:00<3:15:24, 33.61it/s]  2%|▏         | 6000/400000 [03:00<3:17:50, 33.19it/s]
